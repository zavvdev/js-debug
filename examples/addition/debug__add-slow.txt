Concurrent maglev has been disabled for tracing.
[generated bytecode for function: bc__fn (0x25b5001991f1 <SharedFunctionInfo bc__fn>)]
Bytecode length: 9
Parameter count 2
Register count 1
Frame size 8
   74 S> 0x7000040160 @    0 : 0d 0a             LdaSmi [10]
         0x7000040162 @    2 : ca                Star0
         0x7000040163 @    3 : 0b 03             Ldar a0
   74 E> 0x7000040165 @    5 : 3b f9 00          Add r0, [0]
   77 S> 0x7000040168 @    8 : af                Return
Constant pool (size = 0)
Handler Table (size = 0)
Source Position Table (size = 9)
[marking 0x25b5000492fd <JSFunction bc__fn (sfi = 0x25b5001991f1)> for optimization to MAGLEV, ConcurrencyMode::kConcurrent, reason: hot and stable]
[compiling method 0x25b5000492fd <JSFunction bc__fn (sfi = 0x25b5001991f1)> (target MAGLEV), mode: ConcurrencyMode::kSynchronous]
[completed compiling 0x25b5000492fd <JSFunction bc__fn (sfi = 0x25b5001991f1)> (target MAGLEV) - took 0.000, 3.209, 0.000 ms]
[marking 0x25b5000492fd <JSFunction bc__fn (sfi = 0x25b5001991f1)> for optimization to TURBOFAN_JS, ConcurrencyMode::kConcurrent, reason: hot and stable]
[compiling method 0x25b5000492fd <JSFunction bc__fn (sfi = 0x25b5001991f1)> (target TURBOFAN_JS), mode: ConcurrencyMode::kConcurrent]
[marking 0x25b500199251 <JSFunction (sfi = 0x25b500199189)> for optimization to MAGLEV, ConcurrencyMode::kConcurrent, reason: hot and stable]
[compiling method 0x25b500199251 <JSFunction (sfi = 0x25b500199189)> (target MAGLEV) OSR, mode: ConcurrencyMode::kSynchronous]
[completed compiling 0x25b500199251 <JSFunction (sfi = 0x25b500199189)> (target MAGLEV) OSR - took 0.000, 1.000, 0.000 ms]
[compiling method 0x25b500199251 <JSFunction (sfi = 0x25b500199189)> (target TURBOFAN_JS) OSR, mode: ConcurrencyMode::kConcurrent]
[bailout (kind: deopt-eager, reason: Insufficient type feedback for generic global access): begin. deoptimizing 0x25b500199251 <JSFunction (sfi = 0x25b500199189)>, 0x00700004051d <Code MAGLEV>, opt id 2, bytecode offset 75, deopt exit 5, FP to SP delta 80, caller SP 0x00016f49e508, pc 0x0001500003a0]
            ;;; deoptimize at <./examples/addition/add-slow.js:10:10>
  reading input frame  => bytecode_offset=75, args=1, height=4, retval=0(#0); inputs:
      0: 0x25b500199251 ;  [fp -  16]  0x25b500199251 <JSFunction (sfi = 0x25b500199189)>
      1: 0x25b500181a25 ;  [fp +  16]  0x25b500181a25 <JSGlobalProxy>
      2: 0x25b500181a85 ;  [fp -   8]  0x25b500181a85 <NativeContext[301]>
      3: (optimized out)
      4: (optimized out)
      5: (optimized out)
      6: (optimized out)
      7: (optimized out)
  translating interpreted frame  => bytecode_offset=75, variable_frame_size=48, frame_size=120
    -- 1 extra argument(s) already in the stack --
    0x00016f49e500: [top + 112] <- 0x25b500181a25 <JSGlobalProxy> ;  stack parameter (input #1)
    -------------------------
    0x00016f49e4f8: [top + 104] <- 0x000157e0b228 ;  bottommost caller's pc
    0x00016f49e4f0: [top +  96] <- 0x00016f49e530 ;  caller's fp
    0x00016f49e4e8: [top +  88] <- 0x25b500181a85 <NativeContext[301]> ;  context (input #2)
    0x00016f49e4e0: [top +  80] <- 0x25b500199251 <JSFunction (sfi = 0x25b500199189)> ;  function (input #0)
    0x00016f49e4d8: [top +  72] <- 0x000000000002 ;  actual argument count
    0x00016f49e4d0: [top +  64] <- 0x007000040055 <BytecodeArray[118]> ;  bytecode array
    0x00016f49e4c8: [top +  56] <- 0x0000000000e4 <Smi 114> ;  bytecode offset
    0x00016f49e4c0: [top +  48] <- 0x25b500005d89 <arguments_marker> ;  feedback vector    -------------------------
    0x00016f49e4b8: [top +  40] <- 0x25b500005dad <optimized_out> ;  stack parameter (input #3)
    0x00016f49e4b0: [top +  32] <- 0x25b500005dad <optimized_out> ;  stack parameter (input #4)
    0x00016f49e4a8: [top +  24] <- 0x25b500005dad <optimized_out> ;  stack parameter (input #5)
    0x00016f49e4a0: [top +  16] <- 0x25b500005dad <optimized_out> ;  stack parameter (input #6)
    0x00016f49e498: [top +   8] <- 0x25b500000791 <the_hole_value> ;  padding
    0x00016f49e490: [top +   0] <- 0x25b500005dad <optimized_out> ;  accumulator (input #7)
[bailout end. took 0.041 ms]
8.582999999999998
