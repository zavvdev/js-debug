Concurrent maglev has been disabled for tracing.
[generated bytecode for function: bc__fn (0x2002001991f1 <SharedFunctionInfo bc__fn>)]
Bytecode length: 6
Parameter count 2
Register count 0
Frame size 0
   73 S> 0x144000040160 @    0 : 0b 03             Ldar a0
   73 E> 0x144000040162 @    2 : 47 0a 00          AddSmi [10], [0]
   77 S> 0x144000040165 @    5 : af                Return
Constant pool (size = 0)
Handler Table (size = 0)
Source Position Table (size = 9)
[marking 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> for optimization to MAGLEV, ConcurrencyMode::kConcurrent, reason: hot and stable]
[compiling method 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> (target MAGLEV), mode: ConcurrencyMode::kSynchronous]
[completed compiling 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> (target MAGLEV) - took 0.000, 0.166, 0.042 ms]
[marking 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> for optimization to TURBOFAN_JS, ConcurrencyMode::kConcurrent, reason: hot and stable]
[compiling method 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> (target TURBOFAN_JS), mode: ConcurrencyMode::kConcurrent]
[marking 0x200200199251 <JSFunction (sfi = 0x200200199189)> for optimization to MAGLEV, ConcurrencyMode::kConcurrent, reason: hot and stable]
[compiling method 0x200200199251 <JSFunction (sfi = 0x200200199189)> (target MAGLEV) OSR, mode: ConcurrencyMode::kSynchronous]
[completed compiling 0x200200199251 <JSFunction (sfi = 0x200200199189)> (target MAGLEV) OSR - took 0.000, 0.125, 0.000 ms]
[compiling method 0x200200199251 <JSFunction (sfi = 0x200200199189)> (target TURBOFAN_JS) OSR, mode: ConcurrencyMode::kConcurrent]
[completed compiling 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> (target TURBOFAN_JS) - took 0.041, 0.667, 0.000 ms]
[completed optimizing 0x2002000492fd <JSFunction bc__fn (sfi = 0x2002001991f1)> (target TURBOFAN_JS)]
[bailout (kind: deopt-eager, reason: Insufficient type feedback for generic global access): begin. deoptimizing 0x200200199251 <JSFunction (sfi = 0x200200199189)>, 0x14400004050d <Code MAGLEV>, opt id 2, bytecode offset 75, deopt exit 5, FP to SP delta 80, caller SP 0x00016d10a508, pc 0x00016e7403a0]
            ;;; deoptimize at <./examples/addition/add-fast.js:10:10>
  reading input frame  => bytecode_offset=75, args=1, height=4, retval=0(#0); inputs:
      0: 0x200200199251 ;  [fp -  16]  0x200200199251 <JSFunction (sfi = 0x200200199189)>
      1: 0x200200181a25 ;  [fp +  16]  0x200200181a25 <JSGlobalProxy>
      2: 0x200200181a85 ;  [fp -   8]  0x200200181a85 <NativeContext[301]>
      3: (optimized out)
      4: (optimized out)
      5: (optimized out)
      6: (optimized out)
      7: (optimized out)
  translating interpreted frame  => bytecode_offset=75, variable_frame_size=48, frame_size=120
    -- 1 extra argument(s) already in the stack --
    0x00016d10a500: [top + 112] <- 0x200200181a25 <JSGlobalProxy> ;  stack parameter (input #1)
    -------------------------
    0x00016d10a4f8: [top + 104] <- 0x00017654b228 ;  bottommost caller's pc
    0x00016d10a4f0: [top +  96] <- 0x00016d10a530 ;  caller's fp
    0x00016d10a4e8: [top +  88] <- 0x200200181a85 <NativeContext[301]> ;  context (input #2)
    0x00016d10a4e0: [top +  80] <- 0x200200199251 <JSFunction (sfi = 0x200200199189)> ;  function (input #0)
    0x00016d10a4d8: [top +  72] <- 0x000000000002 ;  actual argument count
    0x00016d10a4d0: [top +  64] <- 0x144000040055 <BytecodeArray[118]> ;  bytecode array
    0x00016d10a4c8: [top +  56] <- 0x0000000000e4 <Smi 114> ;  bytecode offset
    0x00016d10a4c0: [top +  48] <- 0x200200005d89 <arguments_marker> ;  feedback vector    -------------------------
    0x00016d10a4b8: [top +  40] <- 0x200200005dad <optimized_out> ;  stack parameter (input #3)
    0x00016d10a4b0: [top +  32] <- 0x200200005dad <optimized_out> ;  stack parameter (input #4)
    0x00016d10a4a8: [top +  24] <- 0x200200005dad <optimized_out> ;  stack parameter (input #5)
    0x00016d10a4a0: [top +  16] <- 0x200200005dad <optimized_out> ;  stack parameter (input #6)
    0x00016d10a498: [top +   8] <- 0x200200000791 <the_hole_value> ;  padding
    0x00016d10a490: [top +   0] <- 0x200200005dad <optimized_out> ;  accumulator (input #7)
[bailout end. took 0.042 ms]
1.375
